{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconsole.log(user);\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toSting();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  console.log(user);\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","console","log","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toSting","rejectWithValue","login","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/home/eichan/Desktop/Projects/mern/support-desk/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconsole.log(user);\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (user, thunkAPI) => {\n    try {\n      return await authService.register(user);\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toSting();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  console.log(user);\n});\n\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(register.pending, state => {\n        state.isLoading = true;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.user = action.payload;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n        state.user = null;\n      })\n      .addCase(logout.fulfilled, state => {\n        state.user = null;\n      });\n  },\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrDC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;AACjB,MAAMO,YAAY,GAAG;EACnBP,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAG,IAAI;EACxBQ,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGd,gBAAgB,CACtC,eAAe,EACf,OAAOE,IAAI,EAAEa,QAAQ,KAAK;EACxB,IAAI;IACF,OAAO,MAAMd,WAAW,CAACa,QAAQ,CAACZ,IAAI,CAAC;EACzC,CAAC,CAAC,OAAOc,KAAK,EAAE;IACd,MAAMH,OAAO,GACVG,KAAK,CAACC,QAAQ,IACbD,KAAK,CAACC,QAAQ,CAACC,IAAI,IACnBF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACL,OAAO,IAC7BG,KAAK,CAACH,OAAO,IACbG,KAAK,CAACG,OAAO,EAAE;IACjB,OAAOJ,QAAQ,CAACK,eAAe,CAACP,OAAO,CAAC;EAC1C;AACF,CAAC,CACF;AAED,OAAO,MAAMQ,KAAK,GAAGrB,gBAAgB,CAAC,YAAY,EAAE,OAAOE,IAAI,EAAEa,QAAQ,KAAK;EAC5ER,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMoB,MAAM,GAAGtB,gBAAgB,CAAC,aAAa,EAAE,YAAY;EAChE,MAAMC,WAAW,CAACqB,MAAM,EAAE;AAC5B,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGxB,WAAW,CAAC;EAC5ByB,IAAI,EAAE,MAAM;EACZf,YAAY;EACZgB,QAAQ,EAAE;IACRC,KAAK,EAAEC,KAAK,IAAI;MACdA,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACjB,OAAO,GAAG,KAAK;MACrBiB,KAAK,CAAChB,SAAS,GAAG,KAAK;MACvBgB,KAAK,CAACd,OAAO,GAAG,EAAE;IACpB;EACF,CAAC;EACDe,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CACJC,OAAO,CAAChB,QAAQ,CAACiB,OAAO,EAAEJ,KAAK,IAAI;MAClCA,KAAK,CAACf,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDkB,OAAO,CAAChB,QAAQ,CAACkB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC9CN,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAAChB,SAAS,GAAG,IAAI;MACtBgB,KAAK,CAACzB,IAAI,GAAG+B,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDJ,OAAO,CAAChB,QAAQ,CAACqB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MAC7CN,KAAK,CAACf,SAAS,GAAG,KAAK;MACvBe,KAAK,CAACjB,OAAO,GAAG,IAAI;MACpBiB,KAAK,CAACd,OAAO,GAAGoB,MAAM,CAACC,OAAO;MAC9BP,KAAK,CAACzB,IAAI,GAAG,IAAI;IACnB,CAAC,CAAC,CACD4B,OAAO,CAACR,MAAM,CAACU,SAAS,EAAEL,KAAK,IAAI;MAClCA,KAAK,CAACzB,IAAI,GAAG,IAAI;IACnB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEwB;AAAM,CAAC,GAAGH,SAAS,CAACa,OAAO;AAC1C,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module"}